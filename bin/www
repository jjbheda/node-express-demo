#!/usr/bin/env node

const fs = require('fs');
var app = require('../app');
var debug = require('debug')('node-express-demo:server');
var https = require('https'); // 引入 https 模块

var port = normalizePort(process.env.PORT || '3000');
app.set('port', port);

// SSL证书配置
const options = {
  key: fs.readFileSync('/opt/guiqiantec.com.key'),
  cert: fs.readFileSync('/opt/guiqiantec.com.pem'),
};

// 创建 HTTPS 服务器
var server = https.createServer(options, app);

server.listen(port);
server.on('error', onError);
server.on('listening', onListening);

function normalizePort(val) {
  var port = parseInt(val, 10);
  if (isNaN(port)) {
    return val;
  }
  if (port >= 0) {
    return port;
  }
  return false;
}

function onError(error) {
  if (error.syscall !== 'listen') {
    throw error;
  }

  var bind = typeof port === 'string'
    ? 'Pipe ' + port
    : 'Port ' + port;

  switch (error.code) {
    case 'EACCES':
      console.error(bind + ' requires elevated privileges');
      process.exit(1);
      break;
    case 'EADDRINUSE':
      console.error(bind + ' is already in use');
      process.exit(1);
      break;
    default:
      throw error;
  }
}

function onListening() {
  var addr = server.address(); // server 必须在此可用
  var bind = typeof addr === 'string'
    ? 'pipe ' + addr
    : 'port ' + addr.port;
  debug('Listening on ' + bind);
}
